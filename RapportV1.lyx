#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass amsbook
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
algorithm2e
tcolorbox
foottoend
\end_modules
\maintain_unincluded_children false
\language french
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\boxbgcolor #baedc3
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style french
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
PROJET SEMESTRIEL : DÉCOUPAGE ÉLECTORAL
\end_layout

\begin_layout Author
ISRAA BEN SASSI, CAMILLE GOUJET ET VICTOR LESUR
\begin_inset Newline newline
\end_inset

À L'ATTENTION DE ARNAUD KNIPPEL
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Illustration du découpage électoral en France
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Abstract
Le découpage électoral est le mécanisme par lequel le territoire national
 est subdivisé en circonscriptions électorales, destinées à permettre et
 favoriser l'expression des citoyens par le vote.
 
\begin_inset Newline newline
\end_inset

Ce découpage est l'objet récurrent de polémiques, sinon d'actions en justice.
 Car il est orchestré, par exemple aux Etats Unis, au niveau de chaque État
 par les gouverneurs et ceux-ci ont la fâcheuse tendance à faire en sorte
 de favoriser leur parti.
 Par exemple, en façonnant des circonscriptions qui fragmentent l'électorat
 de leur adversaire, pour limiter son nombre d'élus.
 Ou, au contraire, en rassemblant dans une seule et même circonscription
 un maximum de votes adverses : ainsi, même avec 80% des voix, cela ne fera
 jamais qu'un seul élu dans la circonscription.
 C'est ce que l'on appelle 
\begin_inset Quotes fld
\end_inset

gâcher des voix
\begin_inset Quotes frd
\end_inset

.
 Il arrive ainsi qu'à l'échelle d'un pays, un parti a moins d'élus qu'un
 autre alors qu'il a eu plus de voix.
 Un exemple? Une certaine Hillary Clinton a perdu la présidentielle en 2016
 avec plus de 2 millions de votes d'avance sur son adversaire.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
Ce projet consiste à étudier une ou plusieurs méthodes de découpage électoral,
 et à essayer de comprendre et démontrer dans quelle mesure on peut influencer
 le résultat d'élections par ce découpage.
\series default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Dans un premier temps, nous nous intéresserons à l'histoire de ce mécanisme
 et redéfinirons quelques notions de base pour que la compréhension du lecteur
 pour le reste du projet soit optimale.
 
\begin_inset Newline newline
\end_inset

Nous étudierons ensuite à partir de situations simples et faciles à modéliser
 de petites bases de données.
 À partir de celles-ci, nous modéliserons des programmes linéaires en nombres
 entiers que nous tenterons de résoudre pour en mesurer l'écart des résultats
 possibles et donc la manipulation partisane que l'on peut en faire pour
 un camp ou un autre..
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Nous généraliserons nos modèles à des bases de données de plus en plus conséquen
tes et complexes et en étudierons les aspects.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Enfin, nous tenterons de remédier au problème d'équité qui pèse
\begin_inset space ~
\end_inset

sur les partis à chaque nouvelle élection en élaborant une modélisation
 la plus équitable et représentative possible.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Afin de mener à bien ce projet, nous nous munirons d'un solveur tel que
 CPLEX pour nous assister dans la résolution de problèmes d'optimisation
 linéaire.
\end_layout

\begin_layout Abstract
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Part
PARTIE THÉORIQUE
\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Section
Histoire 
\end_layout

\begin_layout Standard
Le découpage électoral partisan des circonscriptions, aussi connu sous le
 nom de 
\begin_inset Formula $« gerrymandering »$
\end_inset

, est une pratique qui n'est pas récente et qui est sûrement concomitante
 d'élections de représentants dans ces circonscriptions.
 Néanmoins, c'est avec l'apparition des démocraties représentatives modernes,
 d'abord les États-Unis puis la France, que la question est mis sur le devant
 de la scène.
 Ainsi, le terme 
\begin_inset Quotes fld
\end_inset

gerrymandering
\begin_inset Quotes frd
\end_inset

 nous vient des USA et fait référence à un découpage effectué par le gouverneur
 Elbridge Gerry.
 Ce découpage était si bizarre qu'il rappelait la forme d'une salamandre,
 d’où le mot-valise 
\begin_inset Quotes fld
\end_inset

gerrymandering
\begin_inset Quotes frd
\end_inset

 (composé de 
\begin_inset Quotes fld
\end_inset

Gerry
\begin_inset Quotes frd
\end_inset

 et de 
\begin_inset Quotes fld
\end_inset

salamander
\begin_inset Quotes frd
\end_inset

 du français 
\begin_inset Quotes fld
\end_inset

salamandre
\begin_inset Quotes frd
\end_inset

).
\end_layout

\begin_layout Standard
De nos jours avec des outils de recensement d'une plus grande précision
 et des outils informatiques puissants, le découpage partisan fait toujours
 débat.
 En France, par exemple, il y a eu trois découpages électoraux sous la cinquième
 République (soit en 1958, 1986 et 2010).
 Dans ces trois cas, le gouvernement n'a nécessité uniquement d'une majorité
 absolue au parlement et non d'une majorité qualifiée (celle-ci est nécessaire
 pour un changement de constitution par exemple)
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
source : https://www.conseil-constitutionnel.fr/decision/1986/86208DC.htm
\end_layout

\end_inset

.
 Ainsi, il est plus facile au gouvernement de procéder au gerrymandering.
 Néanmoins, le gouvernement ne peut faire ce qu'il veut.
 En France, tout découpage électoral doit être sur une base 
\begin_inset Quotes fld
\end_inset

essentiellement démographique
\begin_inset Quotes frd
\end_inset

, comme l'indique le conseil constitutionnel
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
source : https://www.cairn.info/revue-pouvoirs-2013-3-page-117.htm
\end_layout

\end_inset

.
 De fait, comme nous le verrons plus tard, le nombre d'habitants d'une circonscr
iption doit être compris entre 80 et 120% de la moyenne des circonscriptions
 de la même région.
\end_layout

\begin_layout Section
Quelques définitions importantes
\end_layout

\begin_layout Definition

\series bold
Découpage électoral
\series default
 
\end_layout

\begin_layout Definition
Le découpage électoral est le mécanisme par lequel le territoire national
 est subdivisé en 
\emph on
circonscriptions électorales
\emph default
, destinées à permettre et favoriser l'expression des citoyens par le vote.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Remark*
En France, le mécanisme du découpage électoral est utilisé pour les élections
 législatives, les élections sénatoriales et les élections au Conseil départemen
tal.
\end_layout

\begin_layout Definition

\series bold
Circonscription électorale
\end_layout

\begin_layout Definition
La circonscription électorale est une division du territoire effectuée dans
 le cadre d'une élection.
 
\begin_inset Newline newline
\end_inset

Chaque citoyen est rattaché à une circonscription et à une seule dans le
 cadre d'un vote.
 La circonscription peut être utilisée dans le cadre des scrutins majoritaires
 ou dans le cadre des scrutins de liste (scrutins proportionnels).
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example*
10 000 électeurs, 10 circonscriptions de 1 000 électeurs, deux partis A
 et B, le premier recueillant 4 000 suffrages et le second 6 000.
 
\end_layout

\begin_layout Itemize
6 circonscriptions gagnées par le parti A avec 53,3% des voix soit 3200
 voix pour A et 2800 voix pour B 
\end_layout

\begin_layout Itemize
4 circonscriptions gagnées par le parti B avec 80% des voix, soit 800 voix
 pour A et 3200 voix pour B.
\end_layout

\begin_layout Standard

\series bold
Le parti B perd les élections bien qu'il soit largement majoritaire en nombre
 de voix.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Chapter
Modéliser le découpage
\end_layout

\begin_layout Section
Application sur l'exemple donné
\end_layout

\begin_layout Standard
Grâce à l'exemple ci-dessus, on remarque que le découpage électoral peut
 grandement influencer le résultat d'une élection.
 Bien modéliser ce découpage est alors essentiel; que notre but soit de
 favoriser un camp ou d'essayer de créer des conditions les plus équitables
 possible.
 Pour commencer, nous allons vous proposer la modélisation suivante :
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Chaque circonscription se décompose en "brique" élémentaire que sont les
 cantons.
 Ces cantons seront dans notre modèle assimilés à des nœuds d'un graphe.
 Chaque canton est relié par des arêtes aux autres cantons limitrophes.
 Pour simplifier, nous allons considérer seulement deux partis A et B.
 Ainsi, on attribua un poids à chaque nœud correspondant à un réel entre
 0 et 1 qui traduit le pourcentage de votants qui soutiennent le parti A.
 Donc si le poids est de 0, tous les votants soutiennent le parti B et si
 le poids est de 1, tous les votants soutiennent le parti A.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\series bold
Créer les circonscriptions à partir du graphe revient à résoudre un problème
 de classification non supervisée.

\series default
 En effet, chaque circonscription ayant un seul élu, on peut influencer
 le nombre d'élus obtenu par un parti en découpant différemment les circonscript
ions.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

 Pour rajouter un minimum de réalisme, on peut exiger que les circonscriptions
 soit d'un seul tenant, c'est-à-dire rajouter une 
\series bold
contrainte de connexité entre les nœuds d'une même classe.
\end_layout

\begin_layout Standard
Si l'on reprend l'exemple précédent de 
\series bold
10 000 électeurs
\series default
 à répartir sur 
\series bold
10 circonscriptions de 1 000 électeurs
\series default
, on peut imaginer que les électeurs se répartissent sur des 
\series bold
cantons de 200 électeurs
\series default
 où 16 cantons soutiennent le parti B (poids 0), 28 soutiennent le parti
 A (poids 1) et 6 sont des cantons de poids 0,33.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Alors on peut répartir ces cantons de façon à obtenir :
\end_layout

\begin_layout Standard
- 4 circonscriptions avec un canton B et 4 cantons A 
\end_layout

\begin_layout Standard
- 6 circonscriptions avec 2 cantons A, 2 cantons B et un canton de poids
 0,33.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Avec cette répartition, le parti B remporte une majorité de circonscriptions
 sans pour autant remporter le plus grand nombre de voix.
 Cette répartition est représentée par le graphe ci-dessous :
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename GrapheExemple.png
	scale 60

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Graphe modélisant la situation
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Modélisation du découpage
\end_layout

\begin_layout Subsection
Problème d'optimisation
\end_layout

\begin_layout Definition
Un problème d'optimisation combinatoire est défini par : 
\end_layout

\begin_layout Itemize
un énoncé
\end_layout

\begin_layout Itemize
une fonction économique 
\end_layout

\begin_layout Itemize
un sens.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsubsection
Énoncé:
\end_layout

\begin_layout Paragraph
Dans notre cas, l'énoncé, c'est-à-dire les données, correspond au graphe
 
\begin_inset Formula $G=(X,U)$
\end_inset

 décrit ci-dessus.
 Soit 
\begin_inset Formula $X=\{x_{1},x_{2},\dots,x_{n}\}$
\end_inset

 l'ensemble des nœuds de notre graphe, tel que chaque 
\begin_inset Formula $x_{i}$
\end_inset

 correspond à un canton.
 On lui associe les variables 
\begin_inset Formula $nbV_{i},pV_{i}$
\end_inset

 qui sont respectivement le 
\series bold
nombre de votants
\series default
 
\series bold
du canton 
\series default
et le 
\series bold
pourcentage/proportion de votants qui soutiennent le parti A
\series default
.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\series bold
Notre objectif est de définir un nombre 
\begin_inset Formula $k$
\end_inset

 de circonscriptions tel que 
\begin_inset Formula $\forall j\in\{1,\dots,k\}$
\end_inset

, 
\begin_inset Formula $K_{j}$
\end_inset

 est un ensemble connexe de 
\begin_inset Formula $X,$
\end_inset

 où un élément de 
\begin_inset Formula $X$
\end_inset

 n'appartient qu'à un seul 
\begin_inset Formula $K_{j}$
\end_inset

.
\series default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Plaçons nous dans un premier temps dans la situation où notre objectif est
 de 
\series bold
faire gagner le parti A
\series default
 :
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

 Nous pouvons commencer par définir la fonction 
\begin_inset Formula $p$
\end_inset

 qui calcule le 
\series bold
poids du parti A dans une circonscription donnée, soit la proportion de
 votants pour le parti A dans cette circonscription.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series default
Le résultat 
\begin_inset Formula $p(K_{j})$
\end_inset

 nous donne en fait le rapport du nombre de personnes votant pour le parti
 A dans la circonscription 
\begin_inset Formula $K_{j}$
\end_inset

 sur le nombre total de votants dans cette même circonscription : 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
p: & X\rightarrow\mathbb{R^{+}}\\
 & K_{j}\mapsto p(K_{j})
\end{align*}

\end_inset


\begin_inset Formula 
\[
p(K_{j})=\frac{\stackrel[i=1,x_{i}\in K_{j}]{n}{\sum}nbV_{i}\times pV_{i}}{\stackrel[i=1,x_{i}\in K_{j}]{n}{\sum}nbV_{i}}
\]

\end_inset


\end_layout

\begin_layout Subsubsection
La fonction économique
\end_layout

\begin_layout LyX-Code
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
usepackage{tcolorbox}
\end_layout

\begin_layout Plain Layout


\backslash
newtcbtheorem[number within=subsubsection]{mydef}{fonction économique}%
 {colback=grey!10,colframe=blue!35!black,fonttitle=
\backslash
bfseries}{th}
\end_layout

\begin_layout Plain Layout


\backslash
begin{mydef}
\end_layout

\begin_layout Plain Layout

Ceci nous permet de définir fonction économique  suivante :
\end_layout

\begin_layout Plain Layout

f:&X
\backslash
rightarrow
\backslash
mathbb{R^{+}}
\backslash

\backslash
&K_{j}
\backslash
rightarrow f(K_{j})
\end_layout

\begin_layout Plain Layout

f(K_{j})&=
\backslash
begin{cases}1 & 
\backslash
text{si }p(K_{j})>0,5
\backslash

\backslash
0 & 
\backslash
text{
\backslash
text{sinon}}
\backslash
end{cases}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Ainsi la fonction f nous dit si c'est le parti A remporte la circonscription
 K_{j}(f(K_{j})=1) ou si c'est le parti B qui remporte la circonscription
 (f(K_{j})=0).
 
\end_layout

\begin_layout Plain Layout


\backslash
end{mydef}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ceci nous permet de définir la fonction économique 
\begin_inset Formula $f$
\end_inset

 suivante :
\begin_inset Formula 
\begin{align*}
f: & X\rightarrow\mathbb{R^{+}}\\
 & K_{j}\mapsto f(K_{j})
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
f(K_{j}) & =\begin{cases}
1 & \text{si }p(K_{j})\geq0,5\\
0 & \text{\text{sinon}}
\end{cases}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Ainsi la fonction 
\begin_inset Formula $f$
\end_inset

 nous dit si c'est le parti A remporte la circonscription 
\begin_inset Formula $K_{j}$
\end_inset

 (
\begin_inset Formula $f(K_{j})=1$
\end_inset

) ou si c'est le parti B qui remporte la circonscription (
\begin_inset Formula $f(K_{j})=0$
\end_inset

).
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsubsection
Sens
\end_layout

\begin_layout Standard
Si notre objectif est de faire gagner le plus de circonscriptions au parti
 A, on peut définir le problème suivant :
\begin_inset Formula 
\[
max\stackrel[j=1]{k}{\sum}f(K_{j})
\]

\end_inset


\end_layout

\begin_layout Standard
Inversement, si notre objectif est de faire gagner le plus de circonscriptions
 au parti B, il suffit de poser :
\begin_inset Formula 
\[
min\stackrel[j=1]{k}{\sum}f(K_{j})
\]

\end_inset


\end_layout

\begin_layout Standard
Remarquons que dans notre formulation, nous avons posé une contrainte de
 façon à ce que les circonscriptions soient d'un seul tenant mais nous n'avons
 pas imposé de contrainte de taille sur les circonscriptions.
 
\begin_inset Newline newline
\end_inset

Pour cela, nous pouvons nous inspirer des contraintes qui existent sur la
 taille des circonscriptions en France.
 Celles-ci sont un peu abstraites mais recommande des tailles de circonscription
s (en nombre de votants) significativement égales.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
La règle que nous nous fixons alors est que le nombre de votants d'une circonscr
iption doit être compris entre 
\begin_inset Formula $80\%$
\end_inset

 et 
\begin_inset Formula $120\%$
\end_inset

 du nombre moyen de votants
\series default
 
\series bold
dans une circonscription
\series default
.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

On peut ainsi définir la contrainte suivante pour un 
\begin_inset Formula $K_{j}$
\end_inset

 donné : 
\begin_inset Formula 
\[
\frac{0,8}{k}\stackrel[i=1]{n}{\sum}nbV_{i}\leq\stackrel[i=1,x_{i}\in K_{j}]{n}{\sum}nbV_{i}\leq\frac{1,20}{k}\stackrel[i=1]{n}{\sum}nbV_{i}
\]

\end_inset


\end_layout

\begin_layout Standard
Notons aussi que si notre objectif n'est pas de favoriser un camp ou un
 autre, alors l'utilisation de la fonction 
\begin_inset Formula $f$
\end_inset

 n'a pas d’intérêt.
 
\begin_inset Newline newline
\end_inset

Il faudrait définir une nouvelle fonction économique tout en gardant la
 contrainte sur la taille que l'on vient d'énoncer.
\end_layout

\begin_layout Subsection
Le choix de variables
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Afin de pouvoir formuler le problème sous forme d'un problème mathématique,
 nous avons besoin de définir les variables que nous allons utiliser.
 
\begin_inset Newline newline
\end_inset

Définissons simplement les variables binaires 
\begin_inset Formula $x_{ij}$
\end_inset

 tel que pour le 
\begin_inset Formula $i^{ème}$
\end_inset

 canton et la 
\begin_inset Formula $j^{ème}$
\end_inset

 circonscription, on ait :
\begin_inset Formula 
\[
x_{ij}=\begin{cases}
1 & \text{si }x_{i}\in K_{j}\\
0 & \text{sinon}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
On peut remarquer que cette variable traduit l'appartenance d'un canton
 à une circonscription.
 Ce qui implique de devoir énoncer ces deux contraintes suivantes :
\begin_inset Formula 
\begin{align*}
\forall i\in\{1,\dots,n\}, & \stackrel[j=1]{k}{\sum}x_{ij}=1\\
\forall j\in\{1,\dots,k\}, & \stackrel[i=1]{n}{\sum}x_{ij}\geq1
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
La première imposant à chaque canton d'appartenir à une et une seule circonscrip
tion et la seconde obligeant chaque circonscription à contenir au-moins
 un canton.
 
\begin_inset Newline newline
\end_inset

Cette dernière contrainte peut par ailleurs être modifiée pour forcer les
 circonscriptions à
\emph on
 
\emph default
chacune contenir, un nombre de cantons que l'on pourra définir.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
En explicitant les variables de la sorte, on peut alors redéfinir la fonction
 
\begin_inset Formula $p(K_{j})$
\end_inset

 précédente :
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
p(K_{j})=\frac{\stackrel[i=1]{n}{\sum}x_{ij}\times nbV_{i}\times pV_{i}}{\stackrel[i=1]{n}{\sum}x_{ij}\times nbV_{i}}
\]

\end_inset


\end_layout

\begin_layout Standard
Et ainsi reformuler notre problème mathématique sous la forme suivante :
\begin_inset Formula 
\begin{align*}
 & \max\left(z\right)=\stackrel[j=1]{k}{\sum}\lfloor2\left(\frac{\stackrel[i=1]{n}{\sum}x_{ij}\times nbV_{i}\times pV_{i}}{\stackrel[i=1]{n}{\sum}x_{ij}\times nbV_{i}}\right)\rfloor\\
 & \begin{cases}
\stackrel[j=1]{k}{\sum}x_{ij}=1 & \forall i\in\{1,\dots,n\}\\
\stackrel[i=1]{n}{\sum}x_{ij}\geq1 & \forall j\in\{1,\dots,k\}\\
\stackrel[i=1]{n}{\sum}x_{ij}\times nbV_{i}\leq\frac{1,20}{k}\stackrel[i=1]{n}{\sum}nbV_{i} & \forall j\in\{1,\dots,k\}\\
\stackrel[i=1]{n}{\sum}x_{ij}\times nbV_{i}\geq\frac{0,8}{k}\stackrel[i=1]{n}{\sum}nbV_{i} & \forall j\in\{1,\dots,k\}\\
x_{ij}\in\left\{ 0,1\right\}  & \forall(i,j)\in\{1,\dots,n\}\times\{1,\dots,k\}
\end{cases}
\end{align*}

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Afin d'appliquer des algorithmes rapides d'optimisation (par exemple ceux
 du logiciel CPLEX), il nous faut maintenant linéariser la formule du problème.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Pour cela, nous voulons prioritairement changer le 
\emph on
quotient
\emph default
 de la formule en 
\emph on
produit
\emph default
 (plus gérable pour la résolution de programmations linéaires) :
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
\emph on
1ère étape :
\series default
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Posons tout d'abord 
\begin_inset Formula $z_{j}=\begin{cases}
1 & si\,\,\,\,\frac{\stackrel[i=1]{n}{\sum}x_{ij}\times nbV_{i}\times pV_{i}}{\stackrel[i=1]{n}{\sum}x_{ij}\times nbV_{i}}\geq0.5\\
0 & si\,\,\,\,\frac{\stackrel[i=1]{n}{\sum}x_{ij}\times nbV_{i}\times pV_{i}}{\stackrel[i=1]{n}{\sum}x_{ij}\times nbV_{i}}<0.5
\end{cases}\,\,\,\,$
\end_inset

,
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

On peut remarquer que 
\begin_inset Formula $\forall j\in\{1,\dots,k\},$
\end_inset


\series bold

\begin_inset Formula $z_{j}\leq\frac{\stackrel[i=1]{n}{\sum}x_{ij}\times nbV_{i}\times pV_{i}}{\stackrel[i=1]{n}{\sum}x_{ij}\times nbV_{i}}+\frac{1}{2}$
\end_inset


\series default
 ,
\begin_inset Newline newline
\end_inset

Multiplions maintenant notre inégalité par 
\begin_inset Formula $\stackrel[i=1]{n}{\sum}x_{ij}\times nbV_{i}$
\end_inset

 :
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\[
z_{j}\times\stackrel[i=1]{n}{\sum}x_{ij}\times nbV_{i}\leq\stackrel[i=1]{n}{\sum}x_{ij}\times nbV_{i}\times pV_{i}+\frac{1}{2}\stackrel[i=1]{n}{\sum}x_{ij}\times nbV_{i}
\]

\end_inset


\begin_inset Newline newline
\end_inset

Ainsi, nous obtenons une condition quadratique.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
\emph on
2ème étape :
\series default
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La deuxième étape consiste à transformer notre condition quadratique en
 condition linéaire.
\begin_inset Newline newline
\end_inset

Pour cela, on introduit 3 nouvelles contraintes impliquant une nouvelle
 variable 
\begin_inset Formula $y_{ij}$
\end_inset

 .
\begin_inset Newline newline
\end_inset

L'objectif de l'introduction de cette variable est d'obtenir le même comportemen
t que si on gardait la formule avec le produit des 
\begin_inset Formula $z_{j}$
\end_inset

avec les 
\begin_inset Formula $x_{ij}$
\end_inset

 mais dans une formulation linéaire.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Posons alors 
\begin_inset Formula $\begin{cases}
y_{ij}\leq\frac{1}{2}(z_{j}+x_{ij})\\
y_{ij}\geq z_{j}+x_{ij}-1
\end{cases}$
\end_inset

 ,
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Ainsi, le problème devient :
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\[
\max\left(z\right)=\stackrel[j=1]{k}{\sum}z_{j}\,\,\,
\]

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\[
\begin{cases}
\stackrel[j=1]{k}{\sum}x_{ij}=1 & \forall i\in\{1,\dots,n\}\\
\stackrel[i=1]{n}{\sum}x_{ij}\geq1 & \forall j\in\{1,\dots,k\}\\
\stackrel[i=1]{n}{\sum}x_{ij}\times nbV_{i}\leq\frac{1,20}{k}\stackrel[i=1]{n}{\sum}nbV_{i} & \forall j\in\{1,\dots,k\}\\
\stackrel[i=1]{n}{\sum}x_{ij}\times nbV_{i}\geq\frac{0,8}{k}\stackrel[i=1]{n}{\sum}nbV_{i} & \forall j\in\{1,\dots,k\}\\
x_{ij}\in\left\{ 0,1\right\}  & \forall(i,j)\in\{1,\dots,n\}\times\{1,\dots,k\}\\
z_{j}\in\left\{ 0,1\right\}  & \forall j\in\{1,\dots,k\}\\
y_{ij}\in\left\{ 0,1\right\}  & \forall(i,j)\in\{1,\dots,n\}\times\{1,\dots,k\}\\
\stackrel[i=1]{n}{\sum}y_{ij}\times nbV_{i}\leq\stackrel[i=1]{n}{\sum}x_{ij}\times nbV_{i}\times pV_{i}+\frac{1}{2}\stackrel[i=1]{n}{\sum}x_{ij}\times nbV_{i} & \forall(i,j)\in\{1,\dots,n\}\times\{1,\dots,k\}\\
y_{ij}\leq\frac{1}{2}(z_{j}+x_{ij}) & \forall(i,j)\in\{1,\dots,n\}\times\{1,\dots,k\}\\
y_{ij}\geq z_{j}+x_{ij}-1 & \forall(i,j)\in\{1,\dots,n\}\times\{1,\dots,k\}
\end{cases}
\]

\end_inset


\begin_inset Newline newline
\end_inset

Finalement, on obtient une formulation mathématique de notre problème sous
 forme linéaire.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La dernière contrainte qu'il nous manque est celle de la connexité.
 C'est-à-dire que pour tout couple de sommets appartenant à une même classe,
 il existe un chemin pour aller de l'un à l'autre ne contenant que des sommets
 de leur classe d'appartenance.
 
\begin_inset Newline newline
\end_inset

Pour expliciter cette notion, posons 
\begin_inset Formula 
\[
G_{j}=(K_{j},U_{j})
\]

\end_inset

 où 
\begin_inset Formula $G_{j}$
\end_inset

 le sous-graphe représentant la circonscription 
\begin_inset Formula $j$
\end_inset

, 
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $K_{j}$
\end_inset

 l'ensemble des sommets d'une circonscription 
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $U_{j}$
\end_inset

 l'ensemble des arcs reliant les sommets de 
\begin_inset Formula $K_{j}$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Nous voulons que 
\begin_inset Formula $\forall j\in\{1,\dots,k\}$
\end_inset

 et 
\begin_inset Formula $\forall(x_{i},x_{i'})\in K_{j}^{2}$
\end_inset

 
\begin_inset Formula $x_{i}\longleftrightarrow x_{i'}$
\end_inset

 dans 
\begin_inset Formula $G_{j}$
\end_inset

.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Pour commencer, on se contentera de calculer la distance entre 2 cantons
 ( 2 noeuds du graphe associé au problème)
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\[
x_{ij}\times x_{kj}\times d_{ik}\leq D
\]

\end_inset


\end_layout

\begin_layout Standard
où D = distance maximale que l'on se fixe pour la résolution de notre problème
 
\end_layout

\begin_layout Standard
où 
\begin_inset Formula $d_{ik}$
\end_inset

= distance entre les sommets 
\begin_inset Formula $i$
\end_inset

 et 
\begin_inset Formula $k$
\end_inset

 du graphe
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Les distances 
\begin_inset Formula $d_{ik}$
\end_inset

seront des données du problème.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Proposition isra : 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
d_{ik} & \leq D\,\,On\,se\,limite\,à\,un\,rayon\,D\,de\,distance\,entre\,les\,villes\\
x_{ij}+x_{kj} & =\,2\,\,Les\,deux\,cantons\,sont\,dans\,la\,même\,circonscription\,\lor k\neq i,\,k\in\{1..n\}
\end{align*}

\end_inset


\end_layout

\begin_layout Chapter
La classification des données
\end_layout

\begin_layout Section
Intérêt
\end_layout

\begin_layout Section
Classification non supervisée
\end_layout

\begin_layout Subsection
Principe
\end_layout

\begin_layout Subsection
Application
\end_layout

\begin_layout Part
PARTIE PRATIQUE
\end_layout

\begin_layout Chapter
Utilisation d'un solveur 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Nous décidons d'utiliser CPLEX via l'API Python.
 
\begin_inset Newline newline
\end_inset

Afin de prendre en main ce solveur, nous allons tout d'abord essayer de
 résoudre le problème sur un 
\emph on
toy example.
\begin_inset Newline newline
\end_inset


\emph default
On décide de le construire nous-mêmes pour pouvoir vérifier les résultats
 en introduisant peu de valeurs et que ces valeurs soient simples.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

On rappelle que l'on a 
\begin_inset Formula $n\,cantons$
\end_inset

 et 
\begin_inset Formula $k\,circonscriptions$
\end_inset

.
\begin_inset Newline newline
\end_inset

Les données 
\begin_inset Formula $nbV_{i},pV_{i}$
\end_inset

 appartenant au canton 
\begin_inset Formula $i$
\end_inset

 respectivement le nombre de votants du canton et le pourcentage/proportion
 de votants qui soutiennent le parti A.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Ici, on choisit donc :
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $\begin{cases}
2\,circonscriptions & ==>k=2\\
5\,cantons & ==>n=5
\end{cases}$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Pour les 
\begin_inset Formula $nbV_{i},pV_{i},$
\end_inset

on choisit arbitrairement :
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\begin{cases}
nbV_{1}=5 & pV_{1}=0.4\\
nbV_{2}=6 & pV_{2}=0.6\\
nbV_{3}=5 & pV_{3}=0.7\\
nbV_{4}=6 & pV_{4}=0.2\\
nbV_{5}=7 & pV_{5}=0.9
\end{cases}$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Toy_Example.png
	lyxscale 30
	scale 30
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Situation initiale à résoudre 
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

On a donc :
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\[
\max\left(z\right)=z_{1}+z_{2}\,\,\,
\]

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\[
\begin{cases}
x_{i1}+x_{i2}=1 & \forall i\in\{1,\dots,5\}\\
x_{1j}+x_{2j}+x_{3j}+x_{4j}+x_{5j}\geq1 & \forall j\in\{1,\dots,2\}\\
x_{1j}nbV_{1}+x_{2j}nbV_{2}+x_{3j}nbV_{3}+x_{4j}nbV_{4}+x_{5j}nbV_{5}\,\,\leq\,\,\frac{1,20}{2}\stackrel[i=1]{n}{\sum}nbV_{i} & \forall j\in\{1,\dots,2\}\\
x_{1j}nbV_{1}+x_{2j}nbV_{2}+x_{3j}nbV_{3}+x_{4j}nbV_{4}+x_{5j}nbV_{5\,\,}\geq\,\,\frac{0,8}{2}\stackrel[i=1]{n}{\sum}nbV_{i} & \forall j\in\{1,\dots,2\}\\
x_{ij}\in\left\{ 0,1\right\}  & \forall(i,j)\in\{1,\dots,n\}\times\{1,\dots,2\}\\
z_{j}\in\left\{ 0,1\right\}  & \forall j\in\{1,\dots,2\}\\
y_{ij}\in\left\{ 0,1\right\}  & \forall(i,j)\in\{1,\dots,5\}\times\{1,\dots,2\}\\
\stackrel[i=1]{5}{\sum}y_{ij}\times nbV_{i}\leq\stackrel[i=1]{5}{\sum}x_{ij}\times nbV_{i}\times pV_{i}+\frac{1}{2}\stackrel[i=1]{5}{\sum}x_{ij}\times nbV_{i} & \forall(i,j)\in\{1,\dots,5\}\times\{1,\dots,2\}\\
y_{ij}\leq\frac{1}{2}(z_{j}+x_{ij}) & \forall(i,j)\in\{1,\dots,5\}\times\{1,\dots,2\}\\
y_{ij}\geq z_{j}+x_{ij}-1 & \forall(i,j)\in\{1,\dots,5\}\times\{1,\dots,2\}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
L'objectif est à présent de mettre ce programme linéaire sous la forme d'un
 problème résoluble en machine.
\end_layout

\begin_layout Chapter
Algorithme de classification non supervisée
\end_layout

\end_body
\end_document
